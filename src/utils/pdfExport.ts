// PDF Export utility for shopping lists
import { ShoppingItem } from '@/store/useAppStore';

export const exportShoppingListToPDF = (shoppingList: ShoppingItem[]) => {
  // Create a simple HTML content for PDF
  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <title>Cooksy Shopping List</title>
      <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { text-align: center; margin-bottom: 30px; }
        .logo { color: #f97316; font-size: 24px; font-weight: bold; }
        .date { color: #666; margin-top: 10px; }
        .category { 
          background: #f97316; 
          color: white; 
          padding: 8px 12px; 
          margin: 20px 0 10px 0; 
          font-weight: bold;
          border-radius: 4px;
        }
        .item { 
          display: flex; 
          justify-content: space-between; 
          padding: 8px 0; 
          border-bottom: 1px solid #eee; 
        }
        .item-name { font-weight: 500; }
        .item-quantity { color: #666; }
        .item-price { color: #f97316; font-weight: bold; }
        .total { 
          margin-top: 20px; 
          padding: 15px; 
          background: #f8f9fa; 
          border-radius: 4px;
          text-align: right;
          font-size: 18px;
          font-weight: bold;
        }
        .footer { 
          margin-top: 40px; 
          text-align: center; 
          color: #666; 
          font-size: 12px; 
        }
      </style>
    </head>
    <body>
      <div class="header">
        <div class="logo">üçõ Cooksy Shopping List</div>
        <div class="date">Generated on ${new Date().toLocaleDateString()}</div>
      </div>
      
      ${generateCategorizedList(shoppingList)}
      
      <div class="total">
        Total Items: ${shoppingList.length} | 
        Estimated Cost: ‚Çπ${shoppingList.reduce((sum, item) => sum + (item.price || 0), 0).toFixed(2)}
      </div>
      
      <div class="footer">
        Happy cooking! üë®‚Äçüç≥<br>
        Generated by Cooksy - AI-Powered Indian Meal Planning
      </div>
    </body>
    </html>
  `;

  // Create and download the PDF
  const blob = new Blob([htmlContent], { type: 'text/html' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = `cooksy-shopping-list-${new Date().toISOString().split('T')[0]}.html`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
};

const generateCategorizedList = (shoppingList: ShoppingItem[]) => {
  const categories = [...new Set(shoppingList.map(item => item.category))];
  
  return categories.map(category => {
    const categoryItems = shoppingList.filter(item => item.category === category);
    return `
      <div class="category">${category}</div>
      ${categoryItems.map(item => `
        <div class="item">
          <div>
            <div class="item-name">${item.name}</div>
            <div class="item-quantity">${item.quantity}</div>
          </div>
          <div class="item-price">${item.price ? `‚Çπ${item.price}` : ''}</div>
        </div>
      `).join('')}
    `;
  }).join('');
};

export const shareShoppingList = (shoppingList: ShoppingItem[]) => {
  const text = `üçõ My Cooksy Shopping List\n\n${shoppingList.map(item => 
    `‚Ä¢ ${item.name} - ${item.quantity}${item.price ? ` (‚Çπ${item.price})` : ''}`
  ).join('\n')}\n\nTotal Items: ${shoppingList.length}\nGenerated by Cooksy App`;

  if (navigator.share) {
    navigator.share({
      title: 'Cooksy Shopping List',
      text: text,
    });
  } else {
    navigator.clipboard.writeText(text);
    // You could show a toast here
  }
};